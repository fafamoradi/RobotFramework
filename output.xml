<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.5 on win32)" generated="20220520 22:22:08.147" rpa="false" schemaversion="3">
<suite id="s1" name="Scenario1" source="C:\Users\DELL\PycharmProjects\ApiTest\TestCases\Scenario1.robot">
<test id="s1-t1" name="First TestCase" line="13">
<kw name="Create Session" library="RequestsLibrary">
<arg>api1session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220520 22:22:08.606" level="INFO">Creating Session using : alias=api1session, url=https://gorest.co.in, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220520 22:22:08.605" endtime="20220520 22:22:08.606"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>api1session</arg>
<arg>/public/v1/posts/123/comments</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220520 22:22:10.729" level="INFO">GET Request : url=https://gorest.co.in/public/v1/posts/123/comments 
 path_url=/public/v1/posts/123/comments 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220520 22:22:10.730" level="INFO">GET Response : url=https://gorest.co.in/public/v1/posts/123/comments 
 status=200, reason=OK 
 headers={'Server': 'nginx', 'Date': 'Fri, 20 May 2022 17:52:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding, Origin', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '0', 'X-Content-Type-Options': 'nosniff', 'X-Download-Options': 'noopen', 'X-Permitted-Cross-Domain-Policies': 'none', 'Referrer-Policy': 'strict-origin-when-cross-origin', 'ETag': 'W/"46f958d5fb095d2a8fdcb7708be78690"', 'Cache-Control': 'max-age=0, private, must-revalidate', 'X-Request-Id': '2eb70a7c-c044-44f2-a965-1dc141870297', 'X-Runtime': '0.006969', 'Strict-Transport-Security': 'max-age=63072000; includeSubDomains', 'Content-Encoding': 'gzip'} 
 body={"meta":{"pagination":{"total":2,"pages":1,"page":1,"limit":20,"links":{"previous":null,"current":"https://gorest.co.in/public/v1/comments?page=1","next":"https://gorest.co.in/public/v1/comments?page=2"}}},"data":[{"id":118,"post_id":123,"name":"Akshita Butt","email":"butt_akshita@franecki.biz","body":"Nemo recusandae omnis. Officiis voluptas illo. Et et debitis. Eaque dolorum doloremque."},{"id":117,"post_id":123,"name":"Girik Kaul","email":"kaul_girik@fisher.name","body":"Autem perspiciatis ipsa."}]} 
 </msg>
<msg timestamp="20220520 22:22:10.731" level="INFO">C:\Users\DELL\AppData\Roaming\Python\Python39\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'gorest.co.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220520 22:22:10.734" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220520 22:22:08.607" endtime="20220520 22:22:10.734"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220520 22:22:10.736" endtime="20220520 22:22:10.742"/>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<var>${json_object}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<msg timestamp="20220520 22:22:10.750" level="INFO">${json_object} = {'meta': {'pagination': {'total': 2, 'pages': 1, 'page': 1, 'limit': 20, 'links': {'previous': None, 'current': 'https://gorest.co.in/public/v1/comments?page=1', 'next': 'https://gorest.co.in/public/v...</msg>
<status status="PASS" starttime="20220520 22:22:10.744" endtime="20220520 22:22:10.750"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${page_value}</var>
<arg>${json_object}</arg>
<arg>$.meta.pagination.page</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220520 22:22:10.827" level="INFO">${page_value} = [1]</msg>
<status status="PASS" starttime="20220520 22:22:10.752" endtime="20220520 22:22:10.828"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${page_value[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220520 22:22:10.828" endtime="20220520 22:22:10.830"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${page_value[0]}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220520 22:22:10.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220520 22:22:10.831" endtime="20220520 22:22:10.834"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${data}</var>
<arg>${json_object}</arg>
<arg>$.data</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220520 22:22:10.874" level="INFO">${data} = [[{'id': 118, 'post_id': 123, 'name': 'Akshita Butt', 'email': 'butt_akshita@franecki.biz', 'body': 'Nemo recusandae omnis. Officiis voluptas illo. Et et debitis. Eaque dolorum doloremque.'}, {'id': 1...</msg>
<status status="PASS" starttime="20220520 22:22:10.834" endtime="20220520 22:22:10.874"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${data[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220520 22:22:10.875" endtime="20220520 22:22:10.877"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${data[0]}</arg>
<arg>[]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220520 22:22:10.879" level="INFO">Argument types are:
&lt;class 'list'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20220520 22:22:10.879" level="FAIL">[{'id': 118, 'post_id': 123, 'name': 'Akshita Butt', 'email': 'butt_akshita@franecki.biz', 'body': 'Nemo recusandae omnis. Officiis voluptas illo. Et et debitis. Eaque dolorum doloremque.'}, {'id': 117, 'post_id': 123, 'name': 'Girik Kaul', 'email': 'kaul_girik@fisher.name', 'body': 'Autem perspiciatis ipsa.'}] != []</msg>
<status status="FAIL" starttime="20220520 22:22:10.878" endtime="20220520 22:22:10.880"/>
</kw>
<status status="FAIL" starttime="20220520 22:22:08.604" endtime="20220520 22:22:10.881">[{'id': 118, 'post_id': 123, 'name': 'Akshita Butt', 'email': 'butt_akshita@franecki.biz', 'body': 'Nemo recusandae omnis. Officiis voluptas illo. Et et debitis. Eaque dolorum doloremque.'}, {'id': 117, 'post_id': 123, 'name': 'Girik Kaul', 'email': 'kaul_girik@fisher.name', 'body': 'Autem perspiciatis ipsa.'}] != []</status>
</test>
<status status="FAIL" starttime="20220520 22:22:08.152" endtime="20220520 22:22:10.883"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Scenario1">Scenario1</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
